# Generated by Django 3.0.3 on 2020-02-20 20:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField()),
                ('due_date', models.DateTimeField()),
                ('comment', models.TextField(blank=True, default=None, null=True)),
                ('grade', models.CharField(blank=True, default=None, max_length=1, null=True)),
                ('submission', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AudioTrim',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('original_text', models.TextField()),
                ('english_text', models.TextField()),
                ('phonetic_text', models.TextField(blank=True, default=None, null=True)),
                ('last_listened_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('score', models.IntegerField(blank=True, default=None, null=True)),
                ('word_count', models.IntegerField(blank=True, default=None, null=True)),
                ('length', models.IntegerField(blank=True, default=None, null=True)),
                ('start_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='BigAudio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('sound_file', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('length', models.TimeField()),
                ('private', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type', models.CharField(max_length=15)),
                ('last_login_date', models.DateTimeField(auto_now=True)),
                ('num_audio_files', models.IntegerField(blank=True, default=None, null=True)),
                ('assignments', models.ManyToManyField(blank=True, default=None, to='alr.Assignment')),
                ('audio_trims', models.ManyToManyField(blank=True, default=None, to='alr.AudioTrim')),
                ('classes', models.ManyToManyField(blank=True, default=None, to='alr.Class')),
                ('languages', models.ManyToManyField(blank=True, default=None, to='alr.Language')),
            ],
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('languages', models.ManyToManyField(to='alr.Language')),
                ('user_id', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='alr.User')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('big_audio_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.BigAudio')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alr.User')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('audio_trim_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='alr.AudioTrim')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alr.User')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='language_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.Language'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.User'),
        ),
        migrations.AddField(
            model_name='bigaudio',
            name='language_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.Language'),
        ),
        migrations.AddField(
            model_name='bigaudio',
            name='owner_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='alr.User'),
        ),
        migrations.AddField(
            model_name='bigaudio',
            name='reviews',
            field=models.ManyToManyField(related_name='big_audio_reviews', through='alr.Review', to='alr.User'),
        ),
        migrations.AddField(
            model_name='bigaudio',
            name='speaker_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.Speaker'),
        ),
        migrations.AddField(
            model_name='audiotrim',
            name='big_audio_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.BigAudio'),
        ),
        migrations.AddField(
            model_name='audiotrim',
            name='comments',
            field=models.ManyToManyField(related_name='big_audio_comments', through='alr.Comment', to='alr.User'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='big_audio_files',
            field=models.ManyToManyField(to='alr.BigAudio'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='class_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.Class'),
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.IntegerField(unique=True)),
                ('wavelength', models.IntegerField(blank=True, default=None, null=True)),
                ('frequency', models.IntegerField(blank=True, default=None, null=True)),
                ('audio_trim_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='alr.AudioTrim')),
            ],
            options={
                'unique_together': {('audio_trim_id', 'set_number')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='audiotrim',
            unique_together={('big_audio_id', 'start_time')},
        ),
    ]
